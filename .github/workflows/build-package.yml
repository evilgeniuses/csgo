name: build-package

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      environment:
        type: string
        default: DEV
        required: true
        description: Default DEV environment for manual feature branch invocations.

jobs:
  Lint:
    name: Lint
    runs-on: ubuntu-latest
    env:
      python-version: "3.10"
    steps:
      - uses: actions/checkout@v3
      - name: Black Lint
        uses: psf/black@stable
        with:
          version: "22.12.0"

  FeatureBranch:
    name: Feature Branch -> Develop
    if: ${{ startsWith(github.ref, 'refs/heads/ENG-') == true && github.event.inputs.environment == 'DEV' }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    environment:
      name: Develop
    env:
      python-version: "3.10"
      environment: "dev"
      aws-account: "834354940696"
      aws-region: "us-west-2"
      role-to-assume: AWS_ROLE_TO_ASSUME_NEW_DEV
    permissions:
      id-token: write
      contents: write
    
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: 1.20.2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets[env.role-to-assume] }}
          aws-region: ${{ env.aws-region }}
      
      - name: Build package dist Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          aws codeartifact login --tool twine --domain eg --domain-owner ${{ env.aws-account }} --repository ${{env.environment}}
          pip install --upgrade pip setuptools
          pip install wheel twine setuptools-golang
          echo "0.0.0.dev0+${{ github.ref_name }}" > VERSION
          echo `python3 setup.py --version` > VERSION
          python setup.py bdist_wheel
          aws codeartifact delete-package-versions --domain eg --domain-owner ${{ env.aws-account }} --repository ${{env.environment}} --format pypi --package csgo --versions $PACKAGE_VERSION
          python -m twine upload --repository codeartifact dist/* --verbose
      
      - name: Build package dist Windows, MacOS
        if: matrix.os != 'ubuntu-latest'
        run: |
          aws codeartifact login --tool twine --domain eg --domain-owner ${{ env.aws-account }} --repository ${{env.environment}}
          pip install --upgrade pip setuptools
          pip install  wheel twine
          echo "0.0.0.dev0+${{ github.ref_name }}" > VERSION
          echo `python3 setup.py --version` > VERSION
          python setup.py bdist_wheel
          aws codeartifact delete-package-versions --domain eg --domain-owner ${{ env.aws-account }} --repository ${{env.environment}} --format pypi --package csgo --versions $PACKAGE_VERSION
          python -m twine upload --repository codeartifact dist/* --verbose
  
  Production:
    name: Production
    if: startsWith(github.ref, 'refs/tags')
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    needs: Lint
    runs-on: ${{ matrix.os }}
    environment:
      name: Production
    env:
      python-version: "3.10"
      environment: "prod"
      aws-account: "597319750692"
      aws-region: "us-west-2"
      role-to-assume: AWS_ROLE_DATA_AND_ANALYTICS_PROD
    permissions:
      id-token: write
      contents: write
    
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v2
        with:
          go-version: 1.20.2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: ${{ secrets[env.role-to-assume] }}
          aws-region: ${{ env.aws-region }}
      
      - name: Build package dist Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          aws codeartifact login --tool twine --domain eg --domain-owner ${{ env.aws-account }} --repository ${{env.environment}}
          pip install --upgrade pip setuptools
          pip install wheel twine setuptools-golang
          export TAG=${{ github.ref_name }}
          echo "${TAG:1}" > VERSION
          echo `python3 setup.py --version` > VERSION
          python setup.py bdist_wheel
          aws codeartifact delete-package-versions --domain eg --domain-owner ${{ env.aws-account }} --repository ${{env.environment}} --format pypi --package csgo --versions $PACKAGE_VERSION
          python -m twine upload --repository codeartifact dist/* --verbose
      
      - name: Build package dist Windows, MacOS
        if: matrix.os != 'ubuntu-latest'
        run: |
          aws codeartifact login --tool twine --domain eg --domain-owner ${{ env.aws-account }} --repository ${{env.environment}}
          pip install --upgrade pip setuptools
          pip install  wheel twine
          export TAG=${{ github.ref_name }}
          echo "${TAG:1}" > VERSION
          echo `python3 setup.py --version` > VERSION
          python setup.py bdist_wheel
          aws codeartifact delete-package-versions --domain eg --domain-owner ${{ env.aws-account }} --repository ${{env.environment}} --format pypi --package csgo --versions $PACKAGE_VERSION
          python -m twine upload --repository codeartifact dist/* --verbose
